*.json
*.md
*.css
build
# This test checks that AST transforms code as expected,
# and it will fail if prettier changes the expected code formatting:
js/output/pjs/pjs-code-injector.test.js
# The remaining files are old files that can be prettified in future:
js/output/pjs/babyhint.js
js/output/pjs/pjs-ast-transforms.js
js/output/pjs/pjs-code-injector.js
js/output/pjs/pjs-debugger.js
js/output/pjs/pjs-output.js
js/output/pjs/pjs-resource-cache.js
js/output/pjs/pjs-tester.js
js/output/pjs/pjs-utils.js
js/output/shared/ast-builder.js
js/output/shared/ast-walker.js
js/output/shared/loop-protect.js
js/output/shared/pooled-worker.js
js/output/sql/sql-output.js
js/output/sql/sql-tester.js
js/output/webpage/state-scrubber.js
js/output/webpage/webpage-tester.js
js/output/webpage/webpage-output.js
js/shared/i18n.js
js/shared/all-images.js
js/shared/images.js
js/shared/config.js
js/shared/sounds.js
js/shared/record.js
js/ui/autosuggest-data.js
js/ui/blockly-processing-blocks.js
js/ui/debugger.js
js/ui/record.js
js/ui/structured-blocks-tooltips.js
js/editors/structured-blocks
workers
tests
testutil
gulpfile.js
build-all-images.js